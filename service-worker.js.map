{"mappings":"AAAA,MAAMA,WAAa,SAMnB,SAASC,sBAAsBC,GAC3B,MACmB,QAAfA,EAAIC,QAC0B,+BAA9B,IAAIC,IAAIF,EAAIG,KAAKC,SAPzBC,KAAKC,iBAAiB,WAAYC,IAC9BA,EAAMC,UAAUC,OAAOC,KAHR,cAanBL,KAAKC,iBAAiB,SAAUC,IAC5B,GAAIR,sBAAsBQ,EAAMI,SAC5B,OAAOJ,EAAMK,YACTH,OAAOC,KAhBA,UAgBiBG,MAAMC,GACnBA,EAAMC,MAAMR,EAAMI,SAASE,MAAMG,IAEpC,MAAMC,EAAiBC,MAAMX,EAAMI,SAASE,MAAMM,IAC9CL,EAAMM,IAAIb,EAAMI,QAASQ,EAAIE,SACtBF,KAEX,OAAOH,GAAkBC","sources":["service-worker.js"],"sourcesContent":["const CACHE_NAME = \"hn-api\"\n\nself.addEventListener(\"install\", (event) => {\n    event.waitUntil(caches.open(CACHE_NAME))\n})\n\nfunction isCacheableApiRequest(req) {\n    return (\n        req.method === \"GET\" &&\n        new URL(req.url).hostname === \"hacker-news.firebaseio.com\"\n    )\n}\n\nself.addEventListener(\"fetch\", (event) => {\n    if (isCacheableApiRequest(event.request)) {\n        return event.respondWith(\n            caches.open(CACHE_NAME).then((cache) => {\n                return cache.match(event.request).then((cachedResponse) => {\n                    // Fetch and update cache in background\n                    const networkPromise = fetch(event.request).then((res) => {\n                        cache.put(event.request, res.clone())\n                        return res\n                    })\n                    return cachedResponse || networkPromise\n                })\n            }),\n        )\n    }\n})\n"],"names":["CACHE_NAME","isCacheableApiRequest","req","method","URL","url","hostname","self","addEventListener","event","waitUntil","caches","open","request","respondWith","then","cache","match","cachedResponse","networkPromise","fetch","res","put","clone"],"version":3,"file":"service-worker.js.map"}